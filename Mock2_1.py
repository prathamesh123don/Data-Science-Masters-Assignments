# -*- coding: utf-8 -*-
"""Write a function that takes a list of numbers as input and returns a new list containing only the even numbers from the input list. Use list comprehension to solve this problem

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1i08CNTzmcUdsRch0D0hlWant5wlJd9tU

Sure, here is the function that takes a list of numbers as input and returns a new list containing only the even numbers from the input list using list comprehension:
"""

def even_numbers(numbers):
  """
  Returns a new list containing only the even numbers from the input list.

  Args:
    numbers: A list of numbers.

  Returns:
    A new list containing only the even numbers from the input list.
  """

  return [number for number in numbers if number % 2 == 0]


def main():
  numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
  even_numbers = even_numbers(numbers)
  print(even_numbers)


if __name__ == "__main__":
  main()

"""This function uses list comprehension to iterate over the input list and create a new list containing only the even numbers. The list comprehension uses the `if` statement to check if each number in the input list is even. If the number is even, it is added to the new list. Otherwise, the number is ignored.

The function then returns the new list containing only the even numbers.

To run the function, you can save it as a Python file and then run it from the command line. For example, if you save the function as `even_numbers.py`, you can run it by typing the following command into the command line:

```
python even_numbers.py
```

This will print the new list containing only the even numbers from the input list.
"""
